--- soap-lite-0.69.orig/lib/SOAP/Lite.pm
+++ soap-lite-0.69/lib/SOAP/Lite.pm
@@ -2160,22 +2160,24 @@
     # Patch code introduced in 0.65 - deserializes array properly
     # %$res = map {$self->decode_object($_)} @{$children || []}; # removed in patch
     # Decode each element of the struct.
+    my %num_children_named;
     foreach my $child (@{$children || []}) {
       my ($child_name, $child_value) = $self->decode_object($child);
       # Store the decoded element in the struct.  If the element name is
       # repeated, replace the previous scalar value with a new array
       # containing both values.
       my $prev = $res->{$child_name};
-      if (not defined $prev) {
+      if (! $num_children_named{$child_name}) {
         # first time to see this value: use scalar
         $res->{$child_name} = $child_value;
-      } elsif (ref $prev ne "ARRAY") {
+      } elsif (1 == $num_children_named{$child_name}) {
         # second time to see this value: convert scalar to array
-        $res->{$child_name} = [ $prev, $child_value ];
+        $res->{$child_name} = [ $res->{$child_name}, $child_value ];
       } else {
         # already have an array: append to it
         push @{$res->{$child_name}}, $child_value;
       }
+      $num_children_named{$child_name}++;
     }
     # End patch code
     return defined $class && $class ne 'SOAPStruct' ? bless($res => $class) : $res;
